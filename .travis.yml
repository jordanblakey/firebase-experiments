################################################################################
## EXAMPLE TRAVIS CONFIG (a variety of example fields and values)
################################################################################

## SETTINGS ####################################################################
language: javascript

# addons:
#   ssh_known_hosts:
#   - git.example.com
#   - 111.22.33.44

# cache:
#   - yarn
#   - pip
#   timeout: 1000
    # directories:
    #   - "node_modules"

# sudo: required
# dist: trusty

# services:
#   - mongodb
#   - riak
#   - rabbitmq
#   - memcached
#   - mysql
#   - postgresql

## SPLITTING UP TEST SUITES FOR PARALLELIZATION ################################
# env:
# - TEST_SUITE=units
# - TEST_SUITE=integration
# script: "bundle exec jest $TEST_SUITE"

# OR SPLIT FURTHER #############################################################
# env:
#   - TESTFOLDER=integration/user
#   - TESTFOLDER=integration/shopping_cart
#   - TESTFOLDER=integration/payments
#   - TESTFOLDER=units
#   script: "bundle exec jest $TESTFOLDER"

# STORE ANYTHING AS AN ENVIRONMENT VARIABLE ####################################
# env:
#   - DB=postgres
#   - SH=bash
#   - PACKAGE_VERSION="1.0.*"
#   global:
#     - CAMPFIRE_TOKEN=abc123
#     - TIMEOUT=1000
#     - secure: mcUCykGm4bUZ3CaW6AxrIMFzuAYjA98VIz6YmYTmM0/8sp/B/54JtQS/j0ehCD6B5BwyW6diVcaQA2c7bovI23GyeTT+TgfkuKRkzDcoY51ZsMDdsflJ94zV7TEIS31eCeq42IBYdHZeVZp/L7EXOzFjVmvYhboJiwnsPybpCfpIH369fjYKuVmutccD890nP8Bzg8iegssVldgsqDagkuLy0wObAVH0FKnqiIPtFoMf3mDeVmK2AkF1Xri1edsPl4wDIu1Ko3RCRgfr6NxzuNSh6f4Z6zmJLB4ONkpb3fAa9Lt+VjJjdSjCBT1OGhJdP7NlO5vSnS5TCYvgFqNSXqqJx9BNzZ9/esszP7DJBe1yq1aNwAvJ7DlSzh5rvLyXR4VWHXRIR3hOWDTRwCsJQJctCLpbDAFJupuZDcvqvPNj8dY5MSCu6NroXMMFmxJHIt3Hdzr+hV9RNJkQRR4K5bR+ewbJ/6h9rjX6Ot6kIsjJkmEwx1jllxi4+gSRtNQ/O4NCi3fvHmpG2pCr7Jz0+eNL2d9wm4ZxX1s18ZSAZ5XcVJdx8zL4vjSnwAQoFXzmx0LcpK6knEgw/hsTFovSpe5p3oLcERfSd7GmPm84Qr8U4YFKXpeQlb9k5BK9MaQVqI4LyaM2h4Xx+wc0QlEQlUOfwD4B2XrAYXFIq1PAEic=
#   matrix:
#     - USE_NETWORK=true
#     - USE_NETWORK=false
#     - secure: <you can also put encrypted vars inside matrix>

# BUILD LIFECYCLE ##############################################################

# apt addons : value # OPTIONAL (install)

# cache components: value # OPTIONAL (install)

# before_install:
  # - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version version-number
  # - export PATH="$HOME/.yarn/bin:$PATH"
  # - sudo apt-get install wkhtmltopdf
  # - wget http://pngquant.org/pngquant_1.7.1-1_i386.deb
  # - sudo dpkg -i pngquant_1.7.1-1_i386.deb
  # - mysql -e 'CREATE DATABASE myapp_test;'
  # - mysql -e 'CREATE DATABASE IF NOT EXISTS test;'
  # - sudo apt-get update
  # - sudo apt-get install language-pack-es
  # - sudo /etc/init.d/postgresql stop
  # - sudo /etc/init.d/postgresql start 9.3

install: npm install

# before_script:
  # - curl http://repo.varnish-cache.org/debian/GPG-key.txt | sudo apt-key add -
  # - echo "deb http://repo.varnish-cache.org/ubuntu/ precise varnish-3.0" | sudo tee -a /etc/apt/sources.list
  # - sudo apt-get update -qq
  # - sudo apt-get install varnish -y
  # - psql -c 'create database travis_ci_test;' -U postgres


script: npm run test

# before_cache: value  # OPTIONAL (for cleaning up cache)

# after_success: value

# after_failure: value

# before_deploy: "echo 'ready?'"

# deploy:
#   provider: heroku
#   on: production # deploy from master branch only
#   on:
     # all_branches: true # deploy from any passing branch
#   api_key:
#     master: ...
#     production: ...
#   app:
#     master: my-app-staging
#     production: my-app-production
#   run:
#     - "rake db:migrate"
#     - restart
#     - "rake cleanup"

# after_deploy:
#   - ./after_deploy_1.sh
#   - ./after_deploy_2.sh

# after_script: value


################################################################################
## DEFAULT TRAVIS ENVIRONMENT VARIABLES (not part of the config example)
################################################################################
# CI=true
# TRAVIS=true
# CONTINUOUS_INTEGRATION=true
# DEBIAN_FRONTEND=noninteractive
# HAS_JOSH_K_SEAL_OF_APPROVAL=true
# USER=travis
# HOME=/home/travis
# LANG=en_US.UTF-8
# LC_ALL=en_US.UTF-8
# RAILS_ENV=test
# RACK_ENV=test
# MERB_ENV=test
# JRUBY_OPTS="--server -Dcext.enabled=false -Xcompile.invokedynamic=false"
# JAVA_HOME
# TRAVIS_ALLOW_FAILURE=true
# TRAVIS_BRANCH=name_of_branch
# TRAVIS_BUILD_DIR: The absolute path to the directory where the repository being built has been copied on the worker.
# TRAVIS_BUILD_ID: The id of the current build that Travis CI uses internally.
# TRAVIS_BUILD_NUMBER: The number of the current build (for example, “4”).
# TRAVIS_COMMIT: The commit that the current build is testing.
# TRAVIS_COMMIT_MESSAGE: The commit subject and body, unwrapped.
# TRAVIS_COMMIT_RANGE: The range of commits that were included in the push or pull request. (Note that this is empty for builds triggered by the initial commit of a new branch.)
# TRAVIS_EVENT_TYPE: Indicates how the build was triggered. One of push, pull_request, api, cron.
# TRAVIS_JOB_ID: The id of the current job that Travis CI uses internally.
# TRAVIS_JOB_NUMBER: The number of the current job (for example, “4.1”).
# TRAVIS_OS_NAME: On multi-OS builds, this value indicates the platform the job is running on. Values are linux and osx currently, to be extended in the future.
# TRAVIS_PULL_REQUEST: The pull request number if the current job is a pull request, “false” if it’s not a pull request.
# TRAVIS_PULL_REQUEST_BRANCH:
# if the current job is a pull request, the name of the branch from which the PR originated.
# if the current job is a push build, this variable is empty ("").
# TRAVIS_PULL_REQUEST_SHA:
# if the current job is a pull request, the commit SHA of the HEAD commit of the PR.
# if the current job is a push build, this variable is empty ("").
# TRAVIS_PULL_REQUEST_SLUG:
# if the current job is a pull request, the slug (in the form owner_name/repo_name) of the repository from which the PR originated.
# if the current job is a push build, this variable is empty ("").
# TRAVIS_REPO_SLUG: The slug (in form: owner_name/repo_name) of the repository currently being built.
# TRAVIS_SECURE_ENV_VARS:
# set to true if there are any encrypted environment variables.
# set to false if no encrypted environment variables are available.
# TRAVIS_SUDO: true or false based on whether sudo is enabled.
# TRAVIS_TEST_RESULT: is set to 0 if the build is successful and 1 if the build is broken.
# TRAVIS_TAG: If the current build is for a git tag, this variable is set to the tag’s name.
# Language-specific builds expose additional environment variables representing the current version being used to run the build. Whether or not they’re set depends on the language you’re using.
# TRAVIS_DART_VERSION
# TRAVIS_GO_VERSION
# TRAVIS_HAXE_VERSION
# TRAVIS_JDK_VERSION
# TRAVIS_JULIA_VERSION
# TRAVIS_NODE_VERSION
# TRAVIS_OTP_RELEASE
# TRAVIS_PERL_VERSION
# TRAVIS_PHP_VERSION
# TRAVIS_PYTHON_VERSION
# TRAVIS_R_VERSION
# TRAVIS_RUBY_VERSION
# TRAVIS_RUST_VERSION
# TRAVIS_SCALA_VERSION
# Other software specific environment variables are set when the software or service is installed or started, and contain the version number:
# TRAVIS_MARIADB_VERSION
# The following environment variables are available for Objective-C builds.
# TRAVIS_XCODE_SDK
# TRAVIS_XCODE_SCHEME
# TRAVIS_XCODE_PROJECT
# TRAVIS_XCODE_WORKSPACE